#!/bin/python3
import requests as rq
import urllib.request as ur
import sys
import yaml
import os
from src.colors import *

locale : dict = {}
PATH = "/tnam"

def loadLocales():
    global locale
    lang = os.environ['LANG'][:5]
    locale = readYaml(f'{PATH}/src/locales/{lang}.yaml')

def err(*text):
    print(Text.RED + Styles.BOLD + 'Error: ', Styles.RESET, *text, sep='')


def mark(*text):
    print(Text.YELLOW + Styles.BOLD + 'Mark: ', Styles.RESET, *text, sep='')


def init():
    mark(locale['dev'])
    os.system(f'mkdir {PATH}/temp')
    os.system(f'mkdir {PATH}/usr')
    os.system(f'touch {PATH}/usr/installed.yaml')


def update():
    mark(locale['dev'])


def readYaml(path) -> dict:

    with open(f'{path}', 'r') as f:
        data = yaml.safe_load(f)
        f.close()

    return data


def writeYaml(file, text):
    with open(file, 'r+') as y:
        cont = y.read()
        y.write(f'{cont}\n{text}')


def unzip(file : str, path):
    os.system(f'unzip -q -d {path} {file}')
    print(f'{locale['unzip']}/{file[-file[::-1].find('/'):]}')


def clearTemp():
    os.system(f'rm -rf {PATH}/temp/*')


def remove(package):
    os.system(f'dpkg -r {package}')


def resourcesList() -> list:

    deb_sources = readYaml(f'{PATH}/src/sources.yaml')

    return deb_sources['deb']


def unite(package):
    ls = os.listdir(f'{PATH}/temp/{package}')
    os.system(f'cat {[ls[i] + ' ' for i in range(len(ls)-1)]} {ls[-1]} > {package}.zip')


def filesList(resource) -> list:
    
    with open(f'{PATH}/temp/files.yaml', 'wb') as bin:

        bin.write(x := rq.get(f'https://raw.githubusercontent.com/{resource}/files.yaml').content)
        bin.close()
    
    files = readYaml(f'{PATH}/temp/files.yaml')
    
    clearTemp()

    return files


def install(package):


    resource = resourcesList()[0]
    os.system(f'mkdir {PATH}/temp/{package}')
    try:
        ur.urlretrieve(f'https://raw.githubusercontent.com/{resource}/{package}/{package}.zip', f'{PATH}/temp/{package}/{package}.zip')
    except:
        pass

    for i in range(1, 10):
        try:
            ur.urlretrieve(f'https://raw.githubusercontent.com/{resource}/{package}/{package}.z0{i}', f'{PATH}/temp/{package}/{package}.z0{i}')
        except:
            break
    
    unite()
    
    unzip(f'{PATH}/temp/{package}.zip', f'{PATH}/temp/')

    os.system(f'dpkg -i {PATH}/temp/{package}.deb')
    print(f'{package} {locale['successInst']}')
    
    clearTemp()


def isSudo():
    if os.geteuid() != 0:
        err(locale['notSudo'])
        return False
    return True

def main():
    loadLocales()
    argv = sys.argv[1:]

    if not argv: 
        print(locale['intro'])
        mark(locale['help'])
        return
    
    match argv[0]:
        case 'init':
            init()
        case 'install':
            if isSudo():
                install(argv[1])
        case 'help':
            for l in locale['_help']:
                print(l)
        case 'remove':
            if isSudo():
                remove(argv[1])
        case 'update':
            if isSudo():
                update()
        case _:
            print(f'{locale['wrongCommand']} {locale['help']}')


if __name__ == '__main__':
    main()
